function start_window(s)
	c_window(s):open_close()
end

class "c_window" (CUIScriptWnd)
function c_window:__init(owner) super()
	self.owner = owner
	self:Init(0,0,1024,768)
	self.open = false
	local xml = CScriptXmlInit()
  xml:ParseFile("ui_tm_window.xml")
	
	xml:InitFrame("background:list_frame",self)
	
	self.list = xml:InitList("list",self)
	self.list:EnableScrollBar(true)
	self.list:ShowSelectedItem(true)
	self:Register(xml:Init3tButton("button:start",self),"btn_start")
	self:AddCallback("btn_start",ui_events.BUTTON_CLICKED,self.start,self)
	self:Register(xml:Init3tButton("button:exit",self),"btn_exit")
	self:AddCallback("btn_exit",ui_events.BUTTON_CLICKED,self.open_close,self)
	self:reset_list()
end
function c_window:start()
	local sel_item = self:get_sel_item()
	if not sel_item then return end
	local name = sel_item.fn:GetText()
	_G["testing"][name]()
end
function c_window:reset_list()
	self.list:RemoveAll()
	for name,value in pairs(_G["testing"]) do
		self.list:AddItem(my_item(name))
	end
end
function c_window:get_sel_item()
	local sel_index = self.list:GetSelectedItem()
	local sel_item = self.list:GetItem(sel_index)
	return sel_item
end
function c_window:open_close()
	if self.owner then
		local wnd,owner
		if self.open then wnd = self owner = self.owner else wnd = self.owner owner = self end
		self.open = not self.open
		wnd:GetHolder():start_stop_menu(owner,true)
		wnd:GetHolder():start_stop_menu(wnd,true)
	else
		level.start_stop_menu(self,true)
	end
end

class "my_item" (CUIListItemEx)
function my_item:__init(text) super()
	self:SetWndRect(0,0,172,22)
	
	self.fn = CUIStatic()
	self.fn:SetAutoDelete	(true)
	
	self:AttachChild(self.fn)
	
	self.fn:SetWndRect(0,4,172,22)
	self.fn:SetText(text)
	self.fn:SetFont(GetFontLetterica18Russian())
	self.fn:SetTextColor(255,216,186,140)
end
